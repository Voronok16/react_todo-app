{"version":3,"sources":["App.js","index.js"],"names":["App","state","tempTitle","todo","sortedTodo","id","all","complete","active","handleSubmit","event","_this","preventDefault","setState","prevState","concat","Object","toConsumableArray","title","status","copyTodoForOperate","addTodo","target","value","statusChange","Number","map","item","activeTodo","completeTodo","allTodo","removeTodo","filter","completedTodo","removeCompleted","_this2","this","react_default","a","createElement","className","onSubmit","placeholder","onChange","style","display","type","htmlFor","checked","onClick","length","href","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"sOAyLeA,oNApLbC,MAAQ,CACNC,UAAW,GACXC,KAAM,GACNC,WAAY,GACZC,GAAI,EACJC,IAAK,WACLC,SAAU,GACVC,OAAQ,MAGVC,aAAe,SAACC,GAAU,IAChBR,EAAcS,EAAKV,MAAnBC,UAERQ,EAAME,iBACND,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BX,KAAI,GAAAY,OAAAC,OAAAC,EAAA,EAAAD,CAAMF,EAAUX,MAAhB,CACF,CACEe,MAAOhB,EACPG,GAAIS,EAAUT,GACdc,QAAQ,KAEZjB,UAAW,GACXG,GAAIS,EAAUT,GAAK,KAErBM,EAAKS,wBAGPC,QAAU,SAACX,GACTC,EAAKE,SAAS,CACZX,UAAWQ,EAAMY,OAAOC,WAI5BC,aAAe,SAACd,GACd,IAAML,EAAKoB,OAAOf,EAAMY,OAAOjB,IAE/BM,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BX,KAAMW,EAAUX,KAAKuB,IAAI,SAAAC,GAAI,OAAKA,EAAKtB,KAAOA,EAC1C,CACAa,MAAOS,EAAKT,MACZb,GAAIsB,EAAKtB,GACTc,QAASQ,EAAKR,QAEdQ,IACJvB,WAAYU,EAAUV,WAAWsB,IAAI,SAAAC,GAAI,OAAKA,EAAKtB,KAAOA,EACtD,CACAa,MAAOS,EAAKT,MACZb,GAAIsB,EAAKtB,GACTc,QAASQ,EAAKR,QAEdQ,OAEoB,aAAtBhB,EAAKV,MAAMO,QAAyBG,EAAKiB,aAEjB,aAAxBjB,EAAKV,MAAMM,UAA2BI,EAAKkB,eAExB,aAAnBlB,EAAKV,MAAMK,KAAsBK,EAAKmB,aAG5CC,WAAa,SAACrB,GACZ,IAAML,EAAKoB,OAAOf,EAAMY,OAAOjB,IAE/BM,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BV,WAAYU,EAAUV,WAAW4B,OAAO,SAAAL,GAAI,OAAIA,EAAKtB,KAAOA,IAC5DF,KAAMW,EAAUX,KAAK6B,OAAO,SAAAL,GAAI,OAAIA,EAAKtB,KAAOA,UAIpDe,mBAAqB,WACnBT,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BV,WAAWY,OAAAC,EAAA,EAAAD,CAAKF,EAAUX,YAI9B2B,QAAU,WACRnB,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BV,WAAWY,OAAAC,EAAA,EAAAD,CAAKF,EAAUX,MAC1BG,IAAK,WACLC,SAAU,GACVC,OAAQ,SAIZoB,WAAa,WACXjB,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BV,WAAYY,OAAAC,EAAA,EAAAD,CAAIF,EAAUX,MAAM6B,OAAO,SAAAL,GAAI,OAAoB,IAAhBA,EAAKR,SACpDb,IAAK,GACLC,SAAU,GACVC,OAAQ,iBAIZyB,cAAgB,WACdtB,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BV,WAAYY,OAAAC,EAAA,EAAAD,CAAIF,EAAUX,MAAM6B,OAAO,SAAAL,GAAI,OAAoB,IAAhBA,EAAKR,SACpDb,IAAK,GACLC,SAAU,WACVC,OAAQ,SAIZ0B,gBAAkB,WAChBvB,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAC1BX,KAAMW,EAAUX,KAAK6B,OAAO,SAAAL,GAAI,OAAoB,IAAhBA,EAAKR,SACzCf,WAAYU,EAAUV,WAAW4B,OAAO,SAAAL,GAAI,OAAoB,IAAhBA,EAAKR,qFAIhD,IAAAgB,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAME,SAAUL,KAAK3B,cACnB4B,EAAAC,EAAAC,cAAA,SACEC,UAAU,WACVE,YAAY,yBACZC,SAAUP,KAAKf,QACfE,MAAOa,KAAKnC,MAAMC,cAKxBmC,EAAAC,EAAAC,cAAA,WAASC,UAAU,OAAOI,MAAO,CAAEC,QAAS,UAC1CR,EAAAC,EAAAC,cAAA,SAAOO,KAAK,WAAWzC,GAAG,aAAamC,UAAU,eACjDH,EAAAC,EAAAC,cAAA,SAAOQ,QAAQ,cAAf,wBAEAV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXJ,KAAKnC,MAAMG,WAAWsB,IAAI,SAAAC,GAAI,OAC7BU,EAAAC,EAAAC,cAAA,MAAIC,UAAWb,EAAKR,OAAS,YAAc,IACzCkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAOO,KAAK,WAAWE,QAASrB,EAAKR,OAAQqB,UAAU,SAASnC,GAAIsB,EAAKtB,GAAI4C,QAASd,EAAKX,eAC3Fa,EAAAC,EAAAC,cAAA,SAAOQ,QAAQ,GAAGH,MAAO,CAAEC,QAAS,UAAYlB,EAAKT,OACrDmB,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASN,UAAU,UAAUnC,GAAIsB,EAAKtB,GAAI4C,QAASd,EAAKJ,mBAO/EM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASI,MAAO,CAAEC,QAAS,UAC3CR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACbJ,KAAKnC,MAAMG,WAAW8C,OACtB,IAFH,cAMAb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEY,KAAK,KACLX,UAAWJ,KAAKnC,MAAMK,IACtB2C,QAASb,KAAKN,SAHhB,QASFO,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,WAAWX,UAAWJ,KAAKnC,MAAMO,OAAQyC,QAASb,KAAKR,YAA/D,WAGFS,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,cAAcX,UAAWJ,KAAKnC,MAAMM,SAAU0C,QAASb,KAAKH,eAApE,eAIJI,EAAAC,EAAAC,cAAA,UACEO,KAAK,SACLN,UAAU,kBACVS,QAASb,KAAKF,iBAHhB,6BAxKQkB,IAAMC,YCExBC,IAASC,OACPlB,EAAAC,EAAAC,cAACiB,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.09e777e6.chunk.js","sourcesContent":["import React from 'react';\n// import classNames from 'classnames';\nimport { runInThisContext } from 'vm';\n\nclass App extends React.Component {\n  state = {\n    tempTitle: '',\n    todo: [],\n    sortedTodo: [],\n    id: 0,\n    all: 'selected',\n    complete: '',\n    active: '',\n  }\n\n  handleSubmit = (event) => {\n    const { tempTitle } = this.state;\n\n    event.preventDefault();\n    this.setState(prevState => ({\n      todo: [...prevState.todo,\n        {\n          title: tempTitle,\n          id: prevState.id,\n          status: false,\n        }],\n      tempTitle: '',\n      id: prevState.id + 1,\n    }));\n    this.copyTodoForOperate();\n  }\n\n  addTodo = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  };\n\n  statusChange = (event) => {\n    const id = Number(event.target.id);\n\n    this.setState(prevState => ({\n      todo: prevState.todo.map(item => (item.id === id\n        ? {\n          title: item.title,\n          id: item.id,\n          status: !item.status,\n        }\n        : item)),\n      sortedTodo: prevState.sortedTodo.map(item => (item.id === id\n        ? {\n          title: item.title,\n          id: item.id,\n          status: !item.status,\n        }\n        : item)),\n    }));\n    if (this.state.active === 'selected') { this.activeTodo(); }\n\n    if (this.state.complete === 'selected') { this.completeTodo(); }\n\n    if (this.state.all === 'selected') { this.allTodo(); }\n  }\n\n  removeTodo = (event) => {\n    const id = Number(event.target.id);\n\n    this.setState(prevState => ({\n      sortedTodo: prevState.sortedTodo.filter(item => item.id !== id),\n      todo: prevState.todo.filter(item => item.id !== id),\n    }));\n  }\n\n  copyTodoForOperate = () => {\n    this.setState(prevState => ({\n      sortedTodo: [...prevState.todo],\n    }));\n  }\n\n  allTodo = () => {\n    this.setState(prevState => ({\n      sortedTodo: [...prevState.todo],\n      all: 'selected',\n      complete: '',\n      active: '',\n    }));\n  }\n\n  activeTodo = () => {\n    this.setState(prevState => ({\n      sortedTodo: [...prevState.todo].filter(item => item.status === false),\n      all: '',\n      complete: '',\n      active: 'selected',\n    }));\n  }\n\n  completedTodo = () => {\n    this.setState(prevState => ({\n      sortedTodo: [...prevState.todo].filter(item => item.status === true),\n      all: '',\n      complete: 'selected',\n      active: '',\n    }));\n  }\n\n  removeCompleted = () => {\n    this.setState(prevState => ({\n      todo: prevState.todo.filter(item => item.status === false),\n      sortedTodo: prevState.sortedTodo.filter(item => item.status === false),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.addTodo}\n              value={this.state.tempTitle}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {this.state.sortedTodo.map(item => (\n              <li className={item.status ? 'completed' : ''}>\n                <div className=\"view\">\n                  <input type=\"checkbox\" checked={item.status} className=\"toggle\" id={item.id} onClick={this.statusChange}/>\n                  <label htmlFor=\"\" style={{ display: 'block' }}>{item.title}</label>\n                  <button type=\"button\" className=\"destroy\" id={item.id} onClick={this.removeTodo}/>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {this.state.sortedTodo.length}\n            {' '}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={this.state.all}\n                onClick={this.allTodo}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a href=\"#/active\" className={this.state.active} onClick={this.activeTodo}>Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\" className={this.state.complete} onClick={this.completedTodo}>Completed</a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.removeCompleted}\n          >\n            Delete completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}