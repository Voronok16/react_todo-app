{"version":3,"sources":["components/AddTodo/AddTodo.js","components/ShowTodo/ShowTodo.js","App.js","index.js"],"names":["AddTodo","state","title","id","handleInputTodo","_ref","target","_this","setState","value","trimStart","handleSubmit","event","preventDefault","_this$state","todo","status","prevState","props","addTodo","react_default","a","createElement","onSubmit","this","className","placeholder","onChange","React","Component","ShowTodos","handleCheckedTodos","todosToShow","handleTodoStatus","removeTodo","style","display","type","onClick","htmlFor","map","item","checked","App","todosOriginal","activeTab","newTodo","concat","Object","toConsumableArray","showTodo","checkStatus","every","filter","removeCompleted","_this2","_this$state2","components_AddTodo_AddTodo","ShowTodo","length","href","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b8b79755.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddTodo extends React.Component {\n  state = {\n    title: '',\n    id: 0,\n  }\n\n  handleInputTodo = ({ target }) => {\n    this.setState({\n      title: target.value.trimStart(),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, id } = this.state;\n\n    if (title) {\n      const todo = {\n        title,\n        id,\n        status: false,\n      };\n\n      this.setState(prevState => ({\n        title: '',\n        id: prevState.id + 1,\n      }));\n      this.props.addTodo(todo);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleInputTodo}\n          value={this.state.title}\n        />\n      </form>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func,\n}.isRequired;\n\nexport default AddTodo;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShowTodos = ({\n  handleCheckedTodos,\n  todosToShow,\n  handleTodoStatus,\n  removeTodo,\n}) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={handleCheckedTodos}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {todosToShow.map(item => (\n        <li className={item.status ? 'completed' : ''}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              checked={item.status}\n              className=\"toggle\"\n              id={item.id}\n              onClick={() => handleTodoStatus(item.id)}\n            />\n            <label\n              htmlFor={item.id}\n              style={{ display: 'block' }}\n            >\n              {item.title}\n            </label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              id={item.id}\n              onClick={() => removeTodo(item.id)}\n            />\n          </div>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nShowTodos.propTypes = {\n  todosToShow: PropTypes.shape({\n    status: PropTypes.bool,\n    id: PropTypes.number,\n    title: PropTypes.string,\n  }),\n  handleCheckedTodos: PropTypes.func,\n  handleTodoStatus: PropTypes.func,\n  removeTodo: PropTypes.func,\n}.isRequired;\n\nexport default ShowTodos;\n","\nimport React from 'react';\nimport AddTodo from './components/AddTodo/AddTodo';\nimport ShowTodos from './components/ShowTodo/ShowTodo';\n// import { runInThisContext } from 'vm';\n\nclass App extends React.Component {\n  state = {\n    todosOriginal: [],\n    todosToShow: [],\n    activeTab: 'all',\n  }\n\n  addTodo = (newTodo) => {\n    const { activeTab } = this.state;\n\n    this.setState((prevState) => {\n      if (activeTab !== 'complete') {\n        return ({\n          todosOriginal: [...prevState.todosOriginal, newTodo],\n          todosToShow: [...prevState.todosToShow, newTodo],\n        });\n      }\n\n      if (activeTab === 'complete') {\n        return ({\n          todosOriginal: [...prevState.todosOriginal, newTodo],\n        });\n      }\n    });\n  }\n\n  handleTodoStatus = (id) => {\n    const { activeTab } = this.state;\n\n    this.setState(prevState => ({\n      todosOriginal: prevState.todosOriginal.map(item => (item.id === id\n        ? {\n          title: item.title,\n          id: item.id,\n          status: !item.status,\n        }\n        : item)),\n      todosToShow: prevState.todosToShow.map(item => (item.id === id\n        ? {\n          title: item.title,\n          id: item.id,\n          status: !item.status,\n        }\n        : item)),\n    }));\n    this.showTodo(activeTab);\n  }\n\n  handleCheckedTodos = () => {\n    const { todosOriginal, activeTab } = this.state;\n    const checkStatus = todosOriginal.every(todo => todo.status\n      === (true || false));\n\n    this.setState(prevState => ({\n      todosOriginal: prevState.todosOriginal.map(item => ({\n        title: item.title,\n        id: item.id,\n        status: checkStatus ? !item.status : true,\n      })),\n      todosToShow: prevState.todosToShow.map(item => ({\n        title: item.title,\n        id: item.id,\n        status: checkStatus ? !item.status : true,\n      })),\n    }));\n    this.showTodo(activeTab);\n  }\n\n  removeTodo = (id) => {\n    this.setState(prevState => ({\n      todosOriginal: prevState.todosOriginal.filter(item => item.id !== id),\n      todosToShow: prevState.todosToShow.filter(item => item.id !== id),\n    }));\n  }\n\n  removeCompleted = () => {\n    const { activeTab } = this.state;\n\n    this.setState(prevState => ({\n      todosOriginal: prevState.todosOriginal\n        .filter(item => item.status === false),\n      todosToShow: prevState.todosOriginal.filter(item => item.status\n        === false),\n    }));\n    this.showTodo(activeTab);\n  }\n\n  showTodo(activeTab) {\n    switch (activeTab) {\n      case 'all':\n        this.setState(prevState => ({\n          todosToShow: [...prevState.todosOriginal],\n          activeTab: 'all',\n        }));\n        break;\n      case 'active':\n        this.setState(prevState => ({\n          todosToShow: prevState.todosOriginal\n            .filter(item => item.status === false),\n          activeTab: 'active',\n        }));\n        break;\n      default:\n        this.setState(prevState => ({\n          todosToShow: prevState.todosOriginal.filter(item => item.status\n            === true),\n          activeTab: 'complete',\n        }));\n        break;\n    }\n  }\n\n  render() {\n    const { activeTab, todosToShow, todosOriginal } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <AddTodo\n            addTodo={this.addTodo}\n          />\n        </header>\n        <ShowTodos\n          handleCheckedTodos={this.handleCheckedTodos}\n          todosToShow={todosToShow}\n          handleTodoStatus={this.handleTodoStatus}\n          removeTodo={this.removeTodo}\n        />\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {todosOriginal.filter(item => item.status === false).length}\n            {' '}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={activeTab === 'all' ? 'selected' : null}\n                onClick={() => this.showTodo('all')}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={activeTab === 'active' ? 'selected' : null}\n                onClick={() => this.showTodo('active')}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={activeTab === 'complete' ? 'selected' : null}\n                onClick={() => this.showTodo('complete')}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.removeCompleted}\n          >\n            Delete completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}